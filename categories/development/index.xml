<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on Scott Barr</title>
    <link>/categories/development/</link>
    <description>Recent content in Development on Scott Barr</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 25 Feb 2016 00:11:26 +1000</lastBuildDate>
    <atom:link href="/categories/development/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Multiple Go Versions</title>
      <link>/2016/02/24/multiple-go-versions/</link>
      <pubDate>Thu, 25 Feb 2016 00:11:26 +1000</pubDate>
      
      <guid>/2016/02/24/multiple-go-versions/</guid>
      <description>&lt;p&gt;Running multiple versions of Go is simple. I see and hear chatter
about it, and there are a few tools around to handle it for you, but
it is so simple to do yourself that I&amp;rsquo;m surprised people reach for a
tool to do this for them.&lt;/p&gt;

&lt;p&gt;Mostly I run the latest stable version of Go, but for whatever reason
(maybe I want to test out a release candidate), I do have multiple
versions installed, and I don&amp;rsquo;t want multiple installations to clobber
each other.&lt;/p&gt;

&lt;p&gt;The following assumes you&amp;rsquo;re on some kind of *nix system, and you&amp;rsquo;re
using Bash. Other OS&amp;rsquo;es and shells will be able to work as well with
appropriate changes.&lt;/p&gt;

&lt;p&gt;I like to keep my Go installations under &lt;code&gt;~/.go/versions&lt;/code&gt;. You can
choose any location you like though.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p ~/.go/versions
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let&amp;rsquo;s grab the latest version of Go (currently 1.6). I&amp;rsquo;m downloading
the OS X archive here, but if you&amp;rsquo;re running another OS you would
download the appropriate archive. Take a look at the Go
&lt;a href=&#34;https://golang.org/dl/&#34;&gt;Downloads&lt;/a&gt; page.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd ~/.go/versions
wget https://storage.googleapis.com/golang/go1.6.darwin-amd64.tar.gz
tar -zxf go1.6.darwin-amd64.tar.gz
mv go go1.6
rm go1.6.darwin-amd64.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add the following environment variables to your &lt;code&gt;~/.bash_profile&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export GOPATH=~/p/go
export GOROOT=~/.go/versions/go1.6
export PATH=$GOROOT/bin:$GOPATH/bin:$PATH
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is where I set my default version of Go.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; : &lt;code&gt;GOPATH&lt;/code&gt; is where your Go projects will live, and &lt;code&gt;GOROOT&lt;/code&gt;
is where the Go installation lives. Don&amp;rsquo;t confuse the two.&lt;/p&gt;

&lt;p&gt;Start a new shell and you should have &lt;code&gt;go&lt;/code&gt; on your path.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ go version
go version go1.6 darwin/amd64
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Success!&lt;/p&gt;

&lt;p&gt;So for whatever reason I also want an older version of Go installed.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd ~/.go/versions
wget https://storage.googleapis.com/golang/go1.5.3.darwin-amd64.tar.gz
tar -zxf go1.5.3.darwin-amd64.tar.gz
mv go go1.5.3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Too easy. You must be getting bored.&lt;/p&gt;

&lt;p&gt;Now I can temporarily switch to the another version by exporting the
desired &lt;code&gt;GOROOT&lt;/code&gt; and prefixing my current &lt;code&gt;$PATH&lt;/code&gt; with &lt;code&gt;$GOROOT/bin&lt;/code&gt;. In this case I am switching to the freshly installed GO 1.5.3.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ export GOROOT=~/.go/versions/go1.5.3
$ export PATH=$GOROOT/bin:$PATH
$ go version
go version go1.5.3 darwin/amd64
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;/images/great-success.jpg&#34; alt=&#34;Great Success!&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>